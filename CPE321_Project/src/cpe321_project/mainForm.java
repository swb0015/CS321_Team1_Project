/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cpe321_project;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.text.DefaultCaret;


/**
 *
 * @author david_b2003
 */
public class mainForm extends javax.swing.JFrame {

    /**
     * Creates new form mainForm
     */
    
    protected mainForm() {

        
        initComponents();
        startPanel1.paint(startPanel1.getGraphics());
        /*
        GameManager manager = GameManager.getInstance();
         
        manager.initializeGame();
        manager.playGame();
        Hand currentHand = manager.getPlayer().getHand();
        Hand dealerHand = manager.getDealer().getHand();
        DisplayHand(currentHand, userCardsPanel);
        DisplayHand(dealerHand, dealerCardsPanel); */
    }
    public void ClearStatusBar(){
        statusTextArea.setText("");
        DefaultCaret caret = (DefaultCaret)statusTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        statusTextArea.revalidate();
    }
    public void AddToStatusBar(String text){
        statusTextArea.append(text + "\n");
        DefaultCaret caret = (DefaultCaret)statusTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        statusTextArea.revalidate();
    }
    public void AddToStatusBarNoReturn(String text){
        statusTextArea.append(text);
        DefaultCaret caret = (DefaultCaret)statusTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        statusTextArea.revalidate();
    }
    private static final mainForm theInstance = new mainForm();
    public static mainForm getInstance() {
       return theInstance;
        } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        startPanel1 = new cpe321_project.startPanel();
        startButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        backGroundPanel1 = new cpe321_project.backGroundPanel();
        rightDoorButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        hitButton = new javax.swing.JButton();
        stayButton = new javax.swing.JButton();
        leftDoorButton = new javax.swing.JButton();
        storeDoorButton = new javax.swing.JButton();
        NewGame = new javax.swing.JToggleButton();
        Help = new javax.swing.JToggleButton();
        QuitGame = new javax.swing.JToggleButton();
        userCardsPanel = new javax.swing.JPanel();
        dealerCardsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusTextArea = new cpe321_project.TransparentTextArea();
        moneyLabel = new javax.swing.JLabel();
        storePanel = new cpe321_project.backGroundPanel();
        goBackButton = new javax.swing.JButton();
        storeInventory = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        winPanel = new cpe321_project.backGroundPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rocket City Casino");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(800, 600));
        jLayeredPane1.setLayout(new javax.swing.OverlayLayout(jLayeredPane1));

        startPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        startPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        startButton.setOpaque(false);
        startButton.setContentAreaFilled(false);
        startButton.setBorderPainted(false);
        startButton.setContentAreaFilled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        startPanel1.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 121, 56));

        quitButton.setBorderPainted(false);
        quitButton.setContentAreaFilled(false);
        quitButton.setOpaque(false);
        quitButton.setContentAreaFilled(false);
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        startPanel1.add(quitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 214, 123, 56));

        jLayeredPane1.add(startPanel1);

        backGroundPanel1.setBackground(new java.awt.Color(0, 204, 0));
        backGroundPanel1.setAutoscrolls(true);
        backGroundPanel1.setOpaque(false);
        backGroundPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        backGroundPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rightDoorButton.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.background"));
        rightDoorButton.setBorderPainted(false);
        rightDoorButton.setContentAreaFilled(false);
        rightDoorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightDoorButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(rightDoorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 110, 155));

        playButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        playButton.setForeground(new java.awt.Color(255, 255, 255));
        playButton.setText("Play");
        playButton.setBorder(null);
        playButton.setBorderPainted(false);
        playButton.setContentAreaFilled(false);
        playButton.setFocusPainted(false);
        playButton.setFocusable(false);
        playButton.setRequestFocusEnabled(false);
        playButton.setVerifyInputWhenFocusTarget(false);
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(playButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, 90, 39));

        hitButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        hitButton.setForeground(new java.awt.Color(255, 255, 255));
        hitButton.setText("Hit");
        hitButton.setBorder(null);
        hitButton.setBorderPainted(false);
        hitButton.setContentAreaFilled(false);
        hitButton.setFocusPainted(false);
        hitButton.setFocusable(false);
        hitButton.setRequestFocusEnabled(false);
        hitButton.setVerifyInputWhenFocusTarget(false);
        hitButton.setVisible(false);
        hitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hitButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(hitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 90, 39));

        stayButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        stayButton.setForeground(new java.awt.Color(255, 255, 255));
        stayButton.setText("Stay");
        stayButton.setBorder(null);
        stayButton.setBorderPainted(false);
        stayButton.setContentAreaFilled(false);
        stayButton.setDefaultCapable(false);
        stayButton.setFocusPainted(false);
        stayButton.setFocusable(false);
        stayButton.setRequestFocusEnabled(false);
        stayButton.setVisible(false);
        stayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stayButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(stayButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 90, 39));

        leftDoorButton.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.background"));
        leftDoorButton.setBorderPainted(false);
        leftDoorButton.setContentAreaFilled(false);
        leftDoorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftDoorButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(leftDoorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 26, 119, 156));

        storeDoorButton.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.background"));
        storeDoorButton.setBorderPainted(false);
        storeDoorButton.setContentAreaFilled(false);
        storeDoorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeDoorButtonActionPerformed(evt);
            }
        });
        backGroundPanel1.add(storeDoorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 26, 87, 135));

        NewGame.setBorder(null);
        NewGame.setContentAreaFilled(false);
        NewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewGameActionPerformed(evt);
            }
        });
        backGroundPanel1.add(NewGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 20));

        Help.setBorder(null);
        Help.setContentAreaFilled(false);
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        backGroundPanel1.add(Help, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 50, 20));

        QuitGame.setBorder(null);
        QuitGame.setContentAreaFilled(false);
        QuitGame.setFocusPainted(false);
        QuitGame.setFocusable(false);
        QuitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitGameActionPerformed(evt);
            }
        });
        backGroundPanel1.add(QuitGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 50, 30));

        userCardsPanel.setBackground(new java.awt.Color(153, 153, 153));
        userCardsPanel.setMinimumSize(new java.awt.Dimension(383, 113));
        userCardsPanel.setOpaque(false);

        javax.swing.GroupLayout userCardsPanelLayout = new javax.swing.GroupLayout(userCardsPanel);
        userCardsPanel.setLayout(userCardsPanelLayout);
        userCardsPanelLayout.setHorizontalGroup(
            userCardsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        userCardsPanelLayout.setVerticalGroup(
            userCardsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 113, Short.MAX_VALUE)
        );

        backGroundPanel1.add(userCardsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 222, 70));

        dealerCardsPanel.setBackground(new java.awt.Color(153, 153, 153));
        dealerCardsPanel.setMinimumSize(new java.awt.Dimension(383, 113));
        dealerCardsPanel.setOpaque(false);

        javax.swing.GroupLayout dealerCardsPanelLayout = new javax.swing.GroupLayout(dealerCardsPanel);
        dealerCardsPanel.setLayout(dealerCardsPanelLayout);
        dealerCardsPanelLayout.setHorizontalGroup(
            dealerCardsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        dealerCardsPanelLayout.setVerticalGroup(
            dealerCardsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 113, Short.MAX_VALUE)
        );

        backGroundPanel1.add(dealerCardsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 222, 70));

        statusTextArea.setEditable(false);
        statusTextArea.setBackground(new java.awt.Color(0, 153, 51));
        statusTextArea.setColumns(20);
        statusTextArea.setLineWrap(true);
        statusTextArea.setRows(5);
        jScrollPane1.setViewportView(statusTextArea);

        backGroundPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 799, 110));

        moneyLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        moneyLabel.setText("$0");
        backGroundPanel1.add(moneyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, -10, 160, 40));

        jLayeredPane1.add(backGroundPanel1);

        storePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        goBackButton.setText("Go Back to Room");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });
        storePanel.add(goBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 140, 60));

        storeInventory.setBackground(new java.awt.Color(255, 255, 255));
        storeInventory.setOpaque(false);

        javax.swing.GroupLayout storeInventoryLayout = new javax.swing.GroupLayout(storeInventory);
        storeInventory.setLayout(storeInventoryLayout);
        storeInventoryLayout.setHorizontalGroup(
            storeInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        storeInventoryLayout.setVerticalGroup(
            storeInventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        storePanel.add(storeInventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 300, 350));

        jLabel1.setText("Store Inventory");
        storePanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLayeredPane1.add(storePanel);

        javax.swing.GroupLayout winPanelLayout = new javax.swing.GroupLayout(winPanel);
        winPanel.setLayout(winPanelLayout);
        winPanelLayout.setHorizontalGroup(
            winPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        winPanelLayout.setVerticalGroup(
            winPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLayeredPane1.add(winPanel);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 562));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void handOver(){
        playButton.setVisible(true);
        hitButton.setVisible(false);
        stayButton.setVisible(false);
    }
    
    public void PlayerWins(){
        GameManager manager = GameManager.getInstance();
        manager.listenForMove("win",this);
        HideAllPanelsExcept(winPanel);
    }
    
    public void PlayerLoses(){
        GameManager manager = GameManager.getInstance();
        manager.listenForMove("lose",this);
        HideAllPanelsExcept(startPanel1);
        Object[] options = {"I Suck"};
        JFrame frame = new JFrame();
        int n = JOptionPane.showOptionDialog(frame, 
                "You ran out of money.",
                "You lose.",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
              
//        if(n == JOptionPane.YES_OPTION){
//            frame.setVisible(false);
//            frame.dispose();
//        }
        startPanel1.paint(startPanel1.getGraphics());
    }

    
    private void DisplayHand(Hand currentHand, JPanel thePanel){
        thePanel.removeAll();
        //thePanel.revalidate();
        //thePanel.repaint();
        thePanel.setLayout(new java.awt.FlowLayout());
        for(Card e: currentHand.getCards())
        {
            JLabel label;
            if(e.getHidden()){
                label = new JLabel("<html><img src='"+getClass().getResource("/cpe321_project/cards/b1fv.gif")+"' width=44 height=59></html>");
            }else{
                label = new JLabel("<html><img src='"+getClass().getResource("/cpe321_project/cards/"+((""+e.getSuit().charAt(0)+e.getFace()+".gif").toLowerCase()))+"' width=44 height=59></html>");
            }
            
            label.setBorder(new javax.swing.border.LineBorder(Color.BLACK));
            label.setPreferredSize(new Dimension(45, 60));
            label.setBackground(Color.WHITE);
            label.setOpaque(true);
            thePanel.add(label);
        }
        //thePanel.revalidate();
        //thePanel.repaint();
        
        //Display Player Score
        GameManager manager = GameManager.getInstance();
        int score = manager.getPlayer().getPoints();
        String str = "$" + Integer.toString(score);
        moneyLabel.setText(str);
        
     
    }
    public void DiplayAllHands()
    {
        GameManager manager = GameManager.getInstance();
        Hand currentHand = manager.getPlayer().getHand();
        Hand dealerHand = manager.getDealer().getHand();
        DisplayHand(currentHand, userCardsPanel);
        DisplayHand(dealerHand, dealerCardsPanel);
        backGroundPanel1.paint(backGroundPanel1.getGraphics());
        try {
            Thread.sleep(500);
        } catch(InterruptedException e) {
            
        }
        int score = manager.getPlayer().getPoints();
        if (score <= 0){
            mainForm form = mainForm.getInstance();
            form.PlayerLoses();
        }
    }
    private void HideAllPanelsExcept(JPanel panel){
        startPanel1.setVisible(false);
        backGroundPanel1.setVisible(false);
        storePanel.setVisible(false);
        panel.setVisible(true);
        jLayeredPane1.moveToFront(panel);
    }
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        manager.initializeGame();
        HideAllPanelsExcept(backGroundPanel1);
        playButton.setVisible(true);
        hitButton.setVisible(false);
        stayButton.setVisible(false);
        userCardsPanel.removeAll();
        dealerCardsPanel.removeAll();
        ClearStatusBar();
        int score = manager.getPlayer().getPoints();
        String str = "$" + Integer.toString(score);
        moneyLabel.setText(str);
        backGroundPanel1.paint(backGroundPanel1.getGraphics());
    }//GEN-LAST:event_startButtonActionPerformed

    private void storeDoorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeDoorButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        if (!manager.gameInProgress){
            manager.listenForMove("store",this);
            HideAllPanelsExcept(storePanel);
            ClearStatusBar();
            storeInventory.removeAll();
            storeInventory.setLayout(new java.awt.FlowLayout());
            
            for(final Item item: manager.getCurrentFloor().getStore().GetInventory()){
                JLabel itemIcon = new JLabel(new javax.swing.ImageIcon(getClass().getResource(item.getIconURL())));
                itemIcon.setPreferredSize(new Dimension(60, 80));
                itemIcon.setText(String.valueOf(item.getCost()));
                itemIcon.setHorizontalTextPosition(JLabel.CENTER);
                itemIcon.setVerticalTextPosition(JLabel.BOTTOM);
                itemIcon.setOpaque(true);
                itemIcon.addMouseListener(new MouseAdapter() { 
                @Override
                public void mousePressed(MouseEvent me) { 
                System.out.println("Clicked"); 
                item.use(null, null);
                } 
                });
                storeInventory.add(itemIcon);
                storeInventory.repaint();
                storeInventory.revalidate();
                
            }
        }
    }//GEN-LAST:event_storeDoorButtonActionPerformed

    private void leftDoorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftDoorButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        if (!manager.gameInProgress){
            manager.listenForMove("left",this);
            playButton.setVisible(true);
            hitButton.setVisible(false);
            stayButton.setVisible(false);
            userCardsPanel.removeAll();
            dealerCardsPanel.removeAll();
            ClearStatusBar();
            backGroundPanel1.paint(backGroundPanel1.getGraphics());
        }
    }//GEN-LAST:event_leftDoorButtonActionPerformed

    private void stayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stayButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        manager.listenForMove("stay",this);
        DiplayAllHands();
        
        //Update Player Score
        //int score = manager.getPlayer().getPoints();
        //String str = "$" + Integer.toString(score);
        //moneyLabel.setText(str);
    }//GEN-LAST:event_stayButtonActionPerformed

    private void hitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hitButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        manager.listenForMove("hit",this);
        DiplayAllHands();
        
        //Update Player Score
        //int score = manager.getPlayer().getPoints();
        //String str = "$" + Integer.toString(score);
        //moneyLabel.setText(str);

    }//GEN-LAST:event_hitButtonActionPerformed

    private void rightDoorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightDoorButtonActionPerformed
        // TODO add your handling code here:
        GameManager manager = GameManager.getInstance();
        if (!manager.gameInProgress){
            manager.listenForMove("right",this);
            playButton.setVisible(true);
            hitButton.setVisible(false);
            stayButton.setVisible(false);
            userCardsPanel.removeAll();
            dealerCardsPanel.removeAll();
            ClearStatusBar();
            backGroundPanel1.paint(backGroundPanel1.getGraphics());
        }
    }//GEN-LAST:event_rightDoorButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // TODO add your handling code here:
        HideAllPanelsExcept(startPanel1);
        Object[] options = {"Quit", "Nope"};
        JFrame frame = new JFrame();
        int n = JOptionPane.showOptionDialog(frame, 
                "Are you sure you want to quit",
                "Quitters aren't cool",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
              
        if(n == JOptionPane.YES_OPTION)
            System.exit(0);
        else
        {
            frame.setVisible(false);
            frame.dispose();
        }
    }//GEN-LAST:event_quitButtonActionPerformed

    private void QuitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitGameActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Quit", "Nope"};
        JFrame frame = new JFrame();
        int n = JOptionPane.showOptionDialog(frame, 
                "Are you sure you want to quit",
                "Quit Game",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
              
        if(n == JOptionPane.YES_OPTION)
            System.exit(0);
        else
        {
            frame.setVisible(false);
            frame.dispose();
        }
    }//GEN-LAST:event_QuitGameActionPerformed

    private void NewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewGameActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Start New Game", "Continue Game"};
        JFrame frame = new JFrame();
        int n = JOptionPane.showOptionDialog(frame, 
                "Are you sure you want to quit",
                "Quitters aren't cool",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
              
        if(n == JOptionPane.YES_OPTION)
               HideAllPanelsExcept(startPanel1);
        else
        {
            frame.setVisible(false);
            frame.dispose();
        }
    }//GEN-LAST:event_NewGameActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
         
        Object[] options = {"Go Back"};
        JFrame frame = new JFrame();
        int n = JOptionPane.showOptionDialog(frame, 
                "Theres no help in blackjack!",
                "Go back and play.",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
              
        if(n == JOptionPane.YES_OPTION)
            frame.setVisible(false);
            frame.dispose();
    }//GEN-LAST:event_HelpActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        playButton.setVisible(false);
        hitButton.setVisible(true);
        stayButton.setVisible(true);
        ClearStatusBar();
        GameManager manager = GameManager.getInstance();
        manager.playGame(this);
        DiplayAllHands();
    }//GEN-LAST:event_playButtonActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
         GameManager manager = GameManager.getInstance();
        manager.listenForMove("exit",this);
        HideAllPanelsExcept(backGroundPanel1);
        playButton.setVisible(true);
        hitButton.setVisible(false);
        stayButton.setVisible(false);
        userCardsPanel.removeAll();
        dealerCardsPanel.removeAll();
        ClearStatusBar();
        backGroundPanel1.paint(backGroundPanel1.getGraphics());
    }//GEN-LAST:event_goBackButtonActionPerformed
/**/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new mainForm().setVisible(true);
                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Help;
    private javax.swing.JToggleButton NewGame;
    private javax.swing.JToggleButton QuitGame;
    private cpe321_project.backGroundPanel backGroundPanel1;
    private javax.swing.JPanel dealerCardsPanel;
    private javax.swing.JButton goBackButton;
    private javax.swing.JButton hitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leftDoorButton;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JButton playButton;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton rightDoorButton;
    private javax.swing.JButton startButton;
    private cpe321_project.startPanel startPanel1;
    private cpe321_project.TransparentTextArea statusTextArea;
    private javax.swing.JButton stayButton;
    private javax.swing.JButton storeDoorButton;
    private javax.swing.JPanel storeInventory;
    private cpe321_project.backGroundPanel storePanel;
    private javax.swing.JPanel userCardsPanel;
    private cpe321_project.backGroundPanel winPanel;
    // End of variables declaration//GEN-END:variables
}
